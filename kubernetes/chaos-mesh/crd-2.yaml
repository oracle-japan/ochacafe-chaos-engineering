apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: awschaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: AWSChaos
    listKind: AWSChaosList
    plural: awschaos
    singular: awschaos
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.action
      name: action
      type: string
    - jsonPath: .spec.duration
      name: duration
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AWSChaos is the Schema for the awschaos API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AWSChaosSpec is the content of the specification for an AWSChaos
            properties:
              action:
                description: 'Action defines the specific aws chaos action. Supported
                  action: ec2-stop / ec2-restart / detach-volume Default action: ec2-stop'
                enum:
                - ec2-stop
                - ec2-restart
                - detach-volume
                type: string
              awsRegion:
                description: AWSRegion defines the region of aws.
                type: string
              deviceName:
                description: DeviceName indicates the name of the device. Needed in
                  detach-volume.
                type: string
              duration:
                description: Duration represents the duration of the chaos action.
                type: string
              ec2Instance:
                description: Ec2Instance indicates the ID of the ec2 instance.
                type: string
              endpoint:
                description: Endpoint indicates the endpoint of the aws server. Just
                  used it in test now.
                type: string
              secretName:
                description: SecretName defines the name of kubernetes secret.
                type: string
              volumeID:
                description: EbsVolume indicates the ID of the EBS volume. Needed
                  in detach-volume.
                type: string
            required:
            - action
            - awsRegion
            - ec2Instance
            type: object
          status:
            description: AWSChaosStatus represents the status of an AWSChaos
            properties:
              conditions:
                description: Conditions represents the current global condition of
                  the chaos
                items:
                  properties:
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              experiment:
                description: Experiment records the last experiment state.
                properties:
                  containerRecords:
                    description: Records are used to track the running status
                    items:
                      properties:
                        id:
                          type: string
                        phase:
                          type: string
                        selectorKey:
                          type: string
                      required:
                      - id
                      - phase
                      - selectorKey
                      type: object
                    type: array
                  desiredPhase:
                    enum:
                    - Run
                    - Stop
                    type: string
                type: object
            required:
            - experiment
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: azurechaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: AzureChaos
    listKind: AzureChaosList
    plural: azurechaos
    singular: azurechaos
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.action
      name: action
      type: string
    - jsonPath: .spec.duration
      name: duration
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureChaos is the Schema for the azurechaos API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureChaosSpec is the content of the specification for an
              AzureChaos
            properties:
              action:
                description: 'Action defines the specific azure chaos action. Supported
                  action: vm-stop / vm-restart / disk-detach Default action: vm-stop'
                enum:
                - vm-stop
                - vm-restart
                - disk-detach
                type: string
              diskName:
                description: DiskName indicates the name of the disk. Needed in disk-detach.
                type: string
              duration:
                description: Duration represents the duration of the chaos action.
                type: string
              lun:
                description: LUN indicates the Logical Unit Number of the data disk.
                  Needed in disk-detach.
                type: integer
              resourceGroupName:
                description: ResourceGroupName defines the name of ResourceGroup
                type: string
              secretName:
                description: SecretName defines the name of kubernetes secret. It
                  is used for Azure credentials.
                type: string
              subscriptionID:
                description: SubscriptionID defines the id of Azure subscription.
                type: string
              vmName:
                description: VMName defines the name of Virtual Machine
                type: string
            required:
            - action
            - resourceGroupName
            - subscriptionID
            - vmName
            type: object
          status:
            description: AzureChaosStatus represents the status of an AzureChaos
            properties:
              conditions:
                description: Conditions represents the current global condition of
                  the chaos
                items:
                  properties:
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              experiment:
                description: Experiment records the last experiment state.
                properties:
                  containerRecords:
                    description: Records are used to track the running status
                    items:
                      properties:
                        id:
                          type: string
                        phase:
                          type: string
                        selectorKey:
                          type: string
                      required:
                      - id
                      - phase
                      - selectorKey
                      type: object
                    type: array
                  desiredPhase:
                    enum:
                    - Run
                    - Stop
                    type: string
                type: object
            required:
            - experiment
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: blockchaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: BlockChaos
    listKind: BlockChaosList
    plural: blockchaos
    singular: blockchaos
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.action
      name: action
      type: string
    - jsonPath: .spec.duration
      name: duration
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BlockChaos is the Schema for the blockchaos API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BlockChaosSpec is the content of the specification for a
              BlockChaos
            properties:
              action:
                description: 'Action defines the specific block chaos action. Supported
                  action: limit / delay'
                enum:
                - limit
                - delay
                type: string
              containerNames:
                description: ContainerNames indicates list of the name of affected
                  container. If not set, the first container will be injected
                items:
                  type: string
                type: array
              delay:
                description: Delay defines the delay distribution.
                properties:
                  correlation:
                    type: string
                  jitter:
                    type: string
                  latency:
                    description: Latency defines the latency of every io request.
                    type: string
                type: object
              duration:
                description: Duration represents the duration of the chaos action.
                type: string
              iops:
                description: IOPS defines the limit of IO frequency.
                type: integer
              mode:
                description: 'Mode defines the mode to run chaos action. Supported
                  mode: one / all / fixed / fixed-percent / random-max-percent'
                enum:
                - one
                - all
                - fixed
                - fixed-percent
                - random-max-percent
                type: string
              selector:
                description: Selector is used to select pods that are used to inject
                  chaos action.
                properties:
                  annotationSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on annotations.
                    type: object
                  expressionSelectors:
                    description: a slice of label selector expressions that can be
                      used to select objects. A list of selectors based on set-based
                      label expressions.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  fieldSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on fields.
                    type: object
                  labelSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on labels.
                    type: object
                  namespaces:
                    description: Namespaces is a set of namespace to which objects
                      belong.
                    items:
                      type: string
                    type: array
                  nodeSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select nodes. Selector which must match a node's labels, and
                      objects must belong to these selected nodes.
                    type: object
                  nodes:
                    description: Nodes is a set of node name and objects must belong
                      to these nodes.
                    items:
                      type: string
                    type: array
                  podPhaseSelectors:
                    description: 'PodPhaseSelectors is a set of condition of a pod
                      at the current time. supported value: Pending / Running / Succeeded
                      / Failed / Unknown'
                    items:
                      type: string
                    type: array
                  pods:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: Pods is a map of string keys and a set values that
                      used to select pods. The key defines the namespace which pods
                      belong, and the each values is a set of pod names.
                    type: object
                type: object
              value:
                description: Value is required when the mode is set to `FixedMode`
                  / `FixedPercentMode` / `RandomMaxPercentMode`. If `FixedMode`, provide
                  an integer of pods to do chaos action. If `FixedPercentMode`, provide
                  a number from 0-100 to specify the percent of pods the server can
                  do chaos action. IF `RandomMaxPercentMode`,  provide a number from
                  0-100 to specify the max percent of pods to do chaos action
                type: string
              volumeName:
                type: string
            required:
            - action
            - mode
            - selector
            - volumeName
            type: object
          status:
            description: BlockChaosStatus represents the status of a BlockChaos
            properties:
              conditions:
                description: Conditions represents the current global condition of
                  the chaos
                items:
                  properties:
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              experiment:
                description: Experiment records the last experiment state.
                properties:
                  containerRecords:
                    description: Records are used to track the running status
                    items:
                      properties:
                        id:
                          type: string
                        phase:
                          type: string
                        selectorKey:
                          type: string
                      required:
                      - id
                      - phase
                      - selectorKey
                      type: object
                    type: array
                  desiredPhase:
                    enum:
                    - Run
                    - Stop
                    type: string
                type: object
              ids:
                additionalProperties:
                  type: integer
                description: InjectionIds always specifies the number of injected
                  chaos action
                type: object
            required:
            - experiment
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: dnschaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: DNSChaos
    listKind: DNSChaosList
    plural: dnschaos
    singular: dnschaos
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.action
      name: action
      type: string
    - jsonPath: .spec.duration
      name: duration
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DNSChaos is the Schema for the networkchaos API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the behavior of a pod chaos experiment
            properties:
              action:
                description: 'Action defines the specific DNS chaos action. Supported
                  action: error, random Default action: error'
                enum:
                - error
                - random
                type: string
              containerNames:
                description: ContainerNames indicates list of the name of affected
                  container. If not set, the first container will be injected
                items:
                  type: string
                type: array
              duration:
                description: Duration represents the duration of the chaos action
                type: string
              mode:
                description: 'Mode defines the mode to run chaos action. Supported
                  mode: one / all / fixed / fixed-percent / random-max-percent'
                enum:
                - one
                - all
                - fixed
                - fixed-percent
                - random-max-percent
                type: string
              patterns:
                description: "Choose which domain names to take effect, support the
                  placeholder ? and wildcard *, or the Specified domain name. Note:
                  \     1. The wildcard * must be at the end of the string. For example,
                  chaos-*.org is invalid.      2. if the patterns is empty, will take
                  effect on all the domain names. For example: \t\tThe value is [\"google.com\",
                  \"github.*\", \"chaos-mes?.org\"], \t\twill take effect on \"google.com\",
                  \"github.com\" and \"chaos-mesh.org\""
                items:
                  type: string
                type: array
              selector:
                description: Selector is used to select pods that are used to inject
                  chaos action.
                properties:
                  annotationSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on annotations.
                    type: object
                  expressionSelectors:
                    description: a slice of label selector expressions that can be
                      used to select objects. A list of selectors based on set-based
                      label expressions.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  fieldSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on fields.
                    type: object
                  labelSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on labels.
                    type: object
                  namespaces:
                    description: Namespaces is a set of namespace to which objects
                      belong.
                    items:
                      type: string
                    type: array
                  nodeSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select nodes. Selector which must match a node's labels, and
                      objects must belong to these selected nodes.
                    type: object
                  nodes:
                    description: Nodes is a set of node name and objects must belong
                      to these nodes.
                    items:
                      type: string
                    type: array
                  podPhaseSelectors:
                    description: 'PodPhaseSelectors is a set of condition of a pod
                      at the current time. supported value: Pending / Running / Succeeded
                      / Failed / Unknown'
                    items:
                      type: string
                    type: array
                  pods:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: Pods is a map of string keys and a set values that
                      used to select pods. The key defines the namespace which pods
                      belong, and the each values is a set of pod names.
                    type: object
                type: object
              value:
                description: Value is required when the mode is set to `FixedMode`
                  / `FixedPercentMode` / `RandomMaxPercentMode`. If `FixedMode`, provide
                  an integer of pods to do chaos action. If `FixedPercentMode`, provide
                  a number from 0-100 to specify the percent of pods the server can
                  do chaos action. IF `RandomMaxPercentMode`,  provide a number from
                  0-100 to specify the max percent of pods to do chaos action
                type: string
            required:
            - action
            - mode
            - selector
            type: object
          status:
            description: Most recently observed status of the chaos experiment about
              pods
            properties:
              conditions:
                description: Conditions represents the current global condition of
                  the chaos
                items:
                  properties:
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              experiment:
                description: Experiment records the last experiment state.
                properties:
                  containerRecords:
                    description: Records are used to track the running status
                    items:
                      properties:
                        id:
                          type: string
                        phase:
                          type: string
                        selectorKey:
                          type: string
                      required:
                      - id
                      - phase
                      - selectorKey
                      type: object
                    type: array
                  desiredPhase:
                    enum:
                    - Run
                    - Stop
                    type: string
                type: object
            required:
            - experiment
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: gcpchaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: GCPChaos
    listKind: GCPChaosList
    plural: gcpchaos
    singular: gcpchaos
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.action
      name: action
      type: string
    - jsonPath: .spec.duration
      name: duration
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GCPChaos is the Schema for the gcpchaos API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GCPChaosSpec is the content of the specification for a GCPChaos
            properties:
              action:
                description: 'Action defines the specific gcp chaos action. Supported
                  action: node-stop / node-reset / disk-loss Default action: node-stop'
                enum:
                - node-stop
                - node-reset
                - disk-loss
                type: string
              deviceNames:
                description: The device name of disks to detach. Needed in disk-loss.
                items:
                  type: string
                type: array
              duration:
                description: Duration represents the duration of the chaos action.
                type: string
              instance:
                description: Instance defines the name of the instance
                type: string
              project:
                description: Project defines the ID of gcp project.
                type: string
              secretName:
                description: SecretName defines the name of kubernetes secret. It
                  is used for GCP credentials.
                type: string
              zone:
                description: Zone defines the zone of gcp project.
                type: string
            required:
            - action
            - instance
            - project
            - zone
            type: object
          status:
            description: GCPChaosStatus represents the status of a GCPChaos
            properties:
              attachedDiskStrings:
                description: The attached disk info strings. Needed in disk-loss.
                items:
                  type: string
                type: array
              conditions:
                description: Conditions represents the current global condition of
                  the chaos
                items:
                  properties:
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              experiment:
                description: Experiment records the last experiment state.
                properties:
                  containerRecords:
                    description: Records are used to track the running status
                    items:
                      properties:
                        id:
                          type: string
                        phase:
                          type: string
                        selectorKey:
                          type: string
                      required:
                      - id
                      - phase
                      - selectorKey
                      type: object
                    type: array
                  desiredPhase:
                    enum:
                    - Run
                    - Stop
                    type: string
                type: object
            required:
            - experiment
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: httpchaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: HTTPChaos
    listKind: HTTPChaosList
    plural: httpchaos
    singular: httpchaos
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.duration
      name: duration
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HTTPChaos is the Schema for the HTTPchaos API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              abort:
                description: Abort is a rule to abort a http session.
                type: boolean
              code:
                description: Code is a rule to select target by http status code in
                  response.
                format: int32
                type: integer
              delay:
                description: Delay represents the delay of the target request/response.
                  A duration string is a possibly unsigned sequence of decimal numbers,
                  each with optional fraction and a unit suffix, such as "300ms",
                  "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s", "m",
                  "h".
                type: string
              duration:
                description: Duration represents the duration of the chaos action.
                type: string
              method:
                description: Method is a rule to select target by http method in request.
                type: string
              mode:
                description: 'Mode defines the mode to run chaos action. Supported
                  mode: one / all / fixed / fixed-percent / random-max-percent'
                enum:
                - one
                - all
                - fixed
                - fixed-percent
                - random-max-percent
                type: string
              patch:
                description: Patch is a rule to patch some contents in target.
                properties:
                  body:
                    description: Body is a rule to patch message body of target.
                    properties:
                      type:
                        description: Type represents the patch type, only support
                          `JSON` as [merge patch json](https://tools.ietf.org/html/rfc7396)
                          currently.
                        type: string
                      value:
                        description: Value is the patch contents.
                        type: string
                    required:
                    - type
                    - value
                    type: object
                  headers:
                    description: 'Headers is a rule to append http headers of target.
                      For example: `[["Set-Cookie", "<one cookie>"], ["Set-Cookie",
                      "<another cookie>"]]`.'
                    items:
                      items:
                        type: string
                      type: array
                    type: array
                  queries:
                    description: 'Queries is a rule to append uri queries of target(Request
                      only). For example: `[["foo", "bar"], ["foo", "unknown"]]`.'
                    items:
                      items:
                        type: string
                      type: array
                    type: array
                type: object
              path:
                description: Path is a rule to select target by uri path in http request.
                type: string
              port:
                description: Port represents the target port to be proxy of.
                format: int32
                type: integer
              replace:
                description: Replace is a rule to replace some contents in target.
                properties:
                  body:
                    description: Body is a rule to replace http message body in target.
                    format: byte
                    type: string
                  code:
                    description: Code is a rule to replace http status code in response.
                    format: int32
                    type: integer
                  headers:
                    additionalProperties:
                      type: string
                    description: Headers is a rule to replace http headers of target.
                      The key-value pairs represent header name and header value pairs.
                    type: object
                  method:
                    description: Method is a rule to replace http method in request.
                    type: string
                  path:
                    description: Path is rule to to replace uri path in http request.
                    type: string
                  queries:
                    additionalProperties:
                      type: string
                    description: 'Queries is a rule to replace uri queries in http
                      request. For example, with value `{ "foo": "unknown" }`, the
                      `/?foo=bar` will be altered to `/?foo=unknown`,'
                    type: object
                type: object
              request_headers:
                additionalProperties:
                  type: string
                description: RequestHeaders is a rule to select target by http headers
                  in request. The key-value pairs represent header name and header
                  value pairs.
                type: object
              response_headers:
                additionalProperties:
                  type: string
                description: ResponseHeaders is a rule to select target by http headers
                  in response. The key-value pairs represent header name and header
                  value pairs.
                type: object
              selector:
                description: Selector is used to select pods that are used to inject
                  chaos action.
                properties:
                  annotationSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on annotations.
                    type: object
                  expressionSelectors:
                    description: a slice of label selector expressions that can be
                      used to select objects. A list of selectors based on set-based
                      label expressions.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  fieldSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on fields.
                    type: object
                  labelSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on labels.
                    type: object
                  namespaces:
                    description: Namespaces is a set of namespace to which objects
                      belong.
                    items:
                      type: string
                    type: array
                  nodeSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select nodes. Selector which must match a node's labels, and
                      objects must belong to these selected nodes.
                    type: object
                  nodes:
                    description: Nodes is a set of node name and objects must belong
                      to these nodes.
                    items:
                      type: string
                    type: array
                  podPhaseSelectors:
                    description: 'PodPhaseSelectors is a set of condition of a pod
                      at the current time. supported value: Pending / Running / Succeeded
                      / Failed / Unknown'
                    items:
                      type: string
                    type: array
                  pods:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: Pods is a map of string keys and a set values that
                      used to select pods. The key defines the namespace which pods
                      belong, and the each values is a set of pod names.
                    type: object
                type: object
              target:
                description: Target is the object to be selected and injected.
                enum:
                - Request
                - Response
                type: string
              value:
                description: Value is required when the mode is set to `FixedMode`
                  / `FixedPercentMode` / `RandomMaxPercentMode`. If `FixedMode`, provide
                  an integer of pods to do chaos action. If `FixedPercentMode`, provide
                  a number from 0-100 to specify the percent of pods the server can
                  do chaos action. IF `RandomMaxPercentMode`,  provide a number from
                  0-100 to specify the max percent of pods to do chaos action
                type: string
            required:
            - mode
            - selector
            - target
            type: object
          status:
            properties:
              conditions:
                description: Conditions represents the current global condition of
                  the chaos
                items:
                  properties:
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              experiment:
                description: Experiment records the last experiment state.
                properties:
                  containerRecords:
                    description: Records are used to track the running status
                    items:
                      properties:
                        id:
                          type: string
                        phase:
                          type: string
                        selectorKey:
                          type: string
                      required:
                      - id
                      - phase
                      - selectorKey
                      type: object
                    type: array
                  desiredPhase:
                    enum:
                    - Run
                    - Stop
                    type: string
                type: object
              instances:
                additionalProperties:
                  format: int64
                  type: integer
                description: Instances always specifies podhttpchaos generation or
                  empty
                type: object
            required:
            - experiment
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: iochaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: IOChaos
    listKind: IOChaosList
    plural: iochaos
    singular: iochaos
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.action
      name: action
      type: string
    - jsonPath: .spec.duration
      name: duration
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IOChaos is the Schema for the iochaos API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IOChaosSpec defines the desired state of IOChaos
            properties:
              action:
                description: 'Action defines the specific pod chaos action. Supported
                  action: latency / fault / attrOverride / mistake'
                enum:
                - latency
                - fault
                - attrOverride
                - mistake
                type: string
              attr:
                description: Attr defines the overrided attribution
                properties:
                  atime:
                    description: Timespec represents a time
                    properties:
                      nsec:
                        format: int64
                        type: integer
                      sec:
                        format: int64
                        type: integer
                    required:
                    - nsec
                    - sec
                    type: object
                  blocks:
                    format: int64
                    type: integer
                  ctime:
                    description: Timespec represents a time
                    properties:
                      nsec:
                        format: int64
                        type: integer
                      sec:
                        format: int64
                        type: integer
                    required:
                    - nsec
                    - sec
                    type: object
                  gid:
                    format: int32
                    type: integer
                  ino:
                    format: int64
                    type: integer
                  kind:
                    description: FileType represents type of file
                    type: string
                  mtime:
                    description: Timespec represents a time
                    properties:
                      nsec:
                        format: int64
                        type: integer
                      sec:
                        format: int64
                        type: integer
                    required:
                    - nsec
                    - sec
                    type: object
                  nlink:
                    format: int32
                    type: integer
                  perm:
                    type: integer
                  rdev:
                    format: int32
                    type: integer
                  size:
                    format: int64
                    type: integer
                  uid:
                    format: int32
                    type: integer
                type: object
              containerNames:
                description: ContainerNames indicates list of the name of affected
                  container. If not set, the first container will be injected
                items:
                  type: string
                type: array
              delay:
                description: Delay defines the value of I/O chaos action delay. A
                  delay string is a possibly signed sequence of decimal numbers, each
                  with optional fraction and a unit suffix, such as "300ms". Valid
                  time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
                type: string
              duration:
                description: Duration represents the duration of the chaos action.
                  It is required when the action is `PodFailureAction`. A duration
                  string is a possibly signed sequence of decimal numbers, each with
                  optional fraction and a unit suffix, such as "300ms", "-1.5h" or
                  "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s", "m",
                  "h".
                type: string
              errno:
                description: 'Errno defines the error code that returned by I/O action.
                  refer to: https://www-numi.fnal.gov/offline_software/srt_public_context/WebDocs/Errors/unix_system_errors.html'
                format: int32
                type: integer
              methods:
                description: 'Methods defines the I/O methods for injecting I/O chaos
                  action. default: all I/O methods.'
                items:
                  type: string
                type: array
              mistake:
                description: Mistake defines what types of incorrectness are injected
                  to IO operations
                properties:
                  filling:
                    description: Filling determines what is filled in the mistake
                      data.
                    enum:
                    - zero
                    - random
                    type: string
                  maxLength:
                    description: Max length of each wrong data segment in bytes
                    format: int64
                    minimum: 1
                    type: integer
                  maxOccurrences:
                    description: There will be [1, MaxOccurrences] segments of wrong
                      data.
                    format: int64
                    minimum: 1
                    type: integer
                type: object
              mode:
                description: 'Mode defines the mode to run chaos action. Supported
                  mode: one / all / fixed / fixed-percent / random-max-percent'
                enum:
                - one
                - all
                - fixed
                - fixed-percent
                - random-max-percent
                type: string
              path:
                description: Path defines the path of files for injecting I/O chaos
                  action.
                type: string
              percent:
                default: 100
                description: 'Percent defines the percentage of injection errors and
                  provides a number from 0-100. default: 100.'
                type: integer
              selector:
                description: Selector is used to select pods that are used to inject
                  chaos action.
                properties:
                  annotationSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on annotations.
                    type: object
                  expressionSelectors:
                    description: a slice of label selector expressions that can be
                      used to select objects. A list of selectors based on set-based
                      label expressions.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  fieldSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on fields.
                    type: object
                  labelSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on labels.
                    type: object
                  namespaces:
                    description: Namespaces is a set of namespace to which objects
                      belong.
                    items:
                      type: string
                    type: array
                  nodeSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select nodes. Selector which must match a node's labels, and
                      objects must belong to these selected nodes.
                    type: object
                  nodes:
                    description: Nodes is a set of node name and objects must belong
                      to these nodes.
                    items:
                      type: string
                    type: array
                  podPhaseSelectors:
                    description: 'PodPhaseSelectors is a set of condition of a pod
                      at the current time. supported value: Pending / Running / Succeeded
                      / Failed / Unknown'
                    items:
                      type: string
                    type: array
                  pods:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: Pods is a map of string keys and a set values that
                      used to select pods. The key defines the namespace which pods
                      belong, and the each values is a set of pod names.
                    type: object
                type: object
              value:
                description: Value is required when the mode is set to `FixedMode`
                  / `FixedPercentMode` / `RandomMaxPercentMode`. If `FixedMode`, provide
                  an integer of pods to do chaos action. If `FixedPercentMode`, provide
                  a number from 0-100 to specify the percent of pods the server can
                  do chaos action. IF `RandomMaxPercentMode`,  provide a number from
                  0-100 to specify the max percent of pods to do chaos action
                type: string
              volumePath:
                description: VolumePath represents the mount path of injected volume
                type: string
            required:
            - action
            - mode
            - selector
            - volumePath
            type: object
          status:
            description: IOChaosStatus defines the observed state of IOChaos
            properties:
              conditions:
                description: Conditions represents the current global condition of
                  the chaos
                items:
                  properties:
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              experiment:
                description: Experiment records the last experiment state.
                properties:
                  containerRecords:
                    description: Records are used to track the running status
                    items:
                      properties:
                        id:
                          type: string
                        phase:
                          type: string
                        selectorKey:
                          type: string
                      required:
                      - id
                      - phase
                      - selectorKey
                      type: object
                    type: array
                  desiredPhase:
                    enum:
                    - Run
                    - Stop
                    type: string
                type: object
              instances:
                additionalProperties:
                  format: int64
                  type: integer
                description: Instances always specifies podiochaos generation or empty
                type: object
            required:
            - experiment
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: jvmchaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: JVMChaos
    listKind: JVMChaosList
    plural: jvmchaos
    singular: jvmchaos
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.action
      name: action
      type: string
    - jsonPath: .spec.duration
      name: duration
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: JVMChaos is the Schema for the jvmchaos API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: JVMChaosSpec defines the desired state of JVMChaos
            properties:
              action:
                description: 'Action defines the specific jvm chaos action. Supported
                  action: latency;return;exception;stress;gc;ruleData'
                enum:
                - latency
                - return
                - exception
                - stress
                - gc
                - ruleData
                type: string
              class:
                description: Java class
                type: string
              containerNames:
                description: ContainerNames indicates list of the name of affected
                  container. If not set, the first container will be injected
                items:
                  type: string
                type: array
              cpuCount:
                description: the CPU core number needs to use, only set it when action
                  is stress
                type: integer
              duration:
                description: Duration represents the duration of the chaos action
                type: string
              exception:
                description: the exception which needs to throw for action `exception`
                type: string
              latency:
                description: the latency duration for action 'latency', unit ms
                type: integer
              memType:
                description: the memory type needs to locate, only set it when action
                  is stress, the value can be 'stack' or 'heap'
                type: string
              method:
                description: the method in Java class
                type: string
              mode:
                description: 'Mode defines the mode to run chaos action. Supported
                  mode: one / all / fixed / fixed-percent / random-max-percent'
                enum:
                - one
                - all
                - fixed
                - fixed-percent
                - random-max-percent
                type: string
              name:
                description: byteman rule name, should be unique, and will use JVMChaos'
                  name if not set
                type: string
              pid:
                description: the pid of Java process which needs to attach
                type: integer
              port:
                description: the port of agent server, default 9277
                format: int32
                type: integer
              ruleData:
                description: the byteman rule's data for action 'ruleData'
                type: string
              selector:
                description: Selector is used to select pods that are used to inject
                  chaos action.
                properties:
                  annotationSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on annotations.
                    type: object
                  expressionSelectors:
                    description: a slice of label selector expressions that can be
                      used to select objects. A list of selectors based on set-based
                      label expressions.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  fieldSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on fields.
                    type: object
                  labelSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on labels.
                    type: object
                  namespaces:
                    description: Namespaces is a set of namespace to which objects
                      belong.
                    items:
                      type: string
                    type: array
                  nodeSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select nodes. Selector which must match a node's labels, and
                      objects must belong to these selected nodes.
                    type: object
                  nodes:
                    description: Nodes is a set of node name and objects must belong
                      to these nodes.
                    items:
                      type: string
                    type: array
                  podPhaseSelectors:
                    description: 'PodPhaseSelectors is a set of condition of a pod
                      at the current time. supported value: Pending / Running / Succeeded
                      / Failed / Unknown'
                    items:
                      type: string
                    type: array
                  pods:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: Pods is a map of string keys and a set values that
                      used to select pods. The key defines the namespace which pods
                      belong, and the each values is a set of pod names.
                    type: object
                type: object
              value:
                description: Value is required when the mode is set to `FixedMode`
                  / `FixedPercentMode` / `RandomMaxPercentMode`. If `FixedMode`, provide
                  an integer of pods to do chaos action. If `FixedPercentMode`, provide
                  a number from 0-100 to specify the percent of pods the server can
                  do chaos action. IF `RandomMaxPercentMode`,  provide a number from
                  0-100 to specify the max percent of pods to do chaos action
                type: string
            required:
            - action
            - mode
            - selector
            type: object
          status:
            description: JVMChaosStatus defines the observed state of JVMChaos
            properties:
              conditions:
                description: Conditions represents the current global condition of
                  the chaos
                items:
                  properties:
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              experiment:
                description: Experiment records the last experiment state.
                properties:
                  containerRecords:
                    description: Records are used to track the running status
                    items:
                      properties:
                        id:
                          type: string
                        phase:
                          type: string
                        selectorKey:
                          type: string
                      required:
                      - id
                      - phase
                      - selectorKey
                      type: object
                    type: array
                  desiredPhase:
                    enum:
                    - Run
                    - Stop
                    type: string
                type: object
            required:
            - experiment
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: kernelchaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: KernelChaos
    listKind: KernelChaosList
    plural: kernelchaos
    singular: kernelchaos
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.duration
      name: duration
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KernelChaos is the Schema for the kernelchaos API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the behavior of a kernel chaos experiment
            properties:
              duration:
                description: Duration represents the duration of the chaos action
                type: string
              failKernRequest:
                description: FailKernRequest defines the request of kernel injection
                properties:
                  callchain:
                    description: 'Callchain indicate a special call chain, such as:     ext4_mount       ->
                      mount_subtree          -> ...             -> should_failslab
                      With an optional set of predicates and an optional set of parameters,
                      which used with predicates. You can read call chan and predicate
                      examples from https://github.com/chaos-mesh/bpfki/tree/develop/examples
                      to learn more. If no special call chain, just keep Callchain
                      empty, which means it will fail at any call chain with slab
                      alloc (eg: kmalloc).'
                    items:
                      description: Frame defines the function signature and predicate
                        in function's body
                      properties:
                        funcname:
                          description: Funcname can be find from kernel source or
                            `/proc/kallsyms`, such as `ext4_mount`
                          type: string
                        parameters:
                          description: Parameters is used with predicate, for example,
                            if you want to inject slab error in `d_alloc_parallel(struct
                            dentry *parent, const struct qstr *name)` with a special
                            name `bananas`, you need to set it to `struct dentry *parent,
                            const struct qstr *name` otherwise omit it.
                          type: string
                        predicate:
                          description: Predicate will access the arguments of this
                            Frame, example with Parameters's, you can set it to `STRNCMP(name->name,
                            "bananas", 8)` to make inject only with it, or omit it
                            to inject for all d_alloc_parallel call chain.
                          type: string
                      type: object
                    type: array
                  failtype:
                    description: 'FailType indicates what to fail, can be set to ''0''
                      / ''1'' / ''2'' If `0`, indicates slab to fail (should_failslab)
                      If `1`, indicates alloc_page to fail (should_fail_alloc_page)
                      If `2`, indicates bio to fail (should_fail_bio) You can read:   1.
                      https://www.kernel.org/doc/html/latest/fault-injection/fault-injection.html   2.
                      http://github.com/iovisor/bcc/blob/master/tools/inject_example.txt
                      to learn more'
                    format: int32
                    maximum: 2
                    minimum: 0
                    type: integer
                  headers:
                    description: 'Headers indicates the appropriate kernel headers
                      you need. Eg: "linux/mmzone.h", "linux/blkdev.h" and so on'
                    items:
                      type: string
                    type: array
                  probability:
                    description: Probability indicates the fails with probability.
                      If you want 1%, please set this field with 1.
                    format: int32
                    maximum: 100
                    minimum: 0
                    type: integer
                  times:
                    description: Times indicates the max times of fails.
                    format: int32
                    minimum: 0
                    type: integer
                required:
                - failtype
                type: object
              mode:
                description: 'Mode defines the mode to run chaos action. Supported
                  mode: one / all / fixed / fixed-percent / random-max-percent'
                enum:
                - one
                - all
                - fixed
                - fixed-percent
                - random-max-percent
                type: string
              selector:
                description: Selector is used to select pods that are used to inject
                  chaos action.
                properties:
                  annotationSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on annotations.
                    type: object
                  expressionSelectors:
                    description: a slice of label selector expressions that can be
                      used to select objects. A list of selectors based on set-based
                      label expressions.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  fieldSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on fields.
                    type: object
                  labelSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on labels.
                    type: object
                  namespaces:
                    description: Namespaces is a set of namespace to which objects
                      belong.
                    items:
                      type: string
                    type: array
                  nodeSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select nodes. Selector which must match a node's labels, and
                      objects must belong to these selected nodes.
                    type: object
                  nodes:
                    description: Nodes is a set of node name and objects must belong
                      to these nodes.
                    items:
                      type: string
                    type: array
                  podPhaseSelectors:
                    description: 'PodPhaseSelectors is a set of condition of a pod
                      at the current time. supported value: Pending / Running / Succeeded
                      / Failed / Unknown'
                    items:
                      type: string
                    type: array
                  pods:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: Pods is a map of string keys and a set values that
                      used to select pods. The key defines the namespace which pods
                      belong, and the each values is a set of pod names.
                    type: object
                type: object
              value:
                description: Value is required when the mode is set to `FixedMode`
                  / `FixedPercentMode` / `RandomMaxPercentMode`. If `FixedMode`, provide
                  an integer of pods to do chaos action. If `FixedPercentMode`, provide
                  a number from 0-100 to specify the percent of pods the server can
                  do chaos action. IF `RandomMaxPercentMode`,  provide a number from
                  0-100 to specify the max percent of pods to do chaos action
                type: string
            required:
            - failKernRequest
            - mode
            - selector
            type: object
          status:
            description: Most recently observed status of the kernel chaos experiment
            properties:
              conditions:
                description: Conditions represents the current global condition of
                  the chaos
                items:
                  properties:
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              experiment:
                description: Experiment records the last experiment state.
                properties:
                  containerRecords:
                    description: Records are used to track the running status
                    items:
                      properties:
                        id:
                          type: string
                        phase:
                          type: string
                        selectorKey:
                          type: string
                      required:
                      - id
                      - phase
                      - selectorKey
                      type: object
                    type: array
                  desiredPhase:
                    enum:
                    - Run
                    - Stop
                    type: string
                type: object
            required:
            - experiment
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: networkchaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: NetworkChaos
    listKind: NetworkChaosList
    plural: networkchaos
    singular: networkchaos
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.action
      name: action
      type: string
    - jsonPath: .spec.duration
      name: duration
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NetworkChaos is the Schema for the networkchaos API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the behavior of a pod chaos experiment
            properties:
              action:
                description: 'Action defines the specific network chaos action. Supported
                  action: partition, netem, delay, loss, duplicate, corrupt Default
                  action: delay'
                enum:
                - netem
                - delay
                - loss
                - duplicate
                - corrupt
                - partition
                - bandwidth
                type: string
              bandwidth:
                description: Bandwidth represents the detail about bandwidth control
                  action
                properties:
                  buffer:
                    description: Buffer is the maximum amount of bytes that tokens
                      can be available for instantaneously.
                    format: int32
                    minimum: 1
                    type: integer
                  limit:
                    description: Limit is the number of bytes that can be queued waiting
                      for tokens to become available.
                    format: int32
                    minimum: 1
                    type: integer
                  minburst:
                    description: Minburst specifies the size of the peakrate bucket.
                      For perfect accuracy, should be set to the MTU of the interface.  If
                      a peakrate is needed, but some burstiness is acceptable, this
                      size can be raised. A 3000 byte minburst allows around 3mbit/s
                      of peakrate, given 1000 byte packets.
                    format: int32
                    minimum: 0
                    type: integer
                  peakrate:
                    description: Peakrate is the maximum depletion rate of the bucket.
                      The peakrate does not need to be set, it is only necessary if
                      perfect millisecond timescale shaping is required.
                    format: int64
                    minimum: 0
                    type: integer
                  rate:
                    description: Rate is the speed knob. Allows bps, kbps, mbps, gbps,
                      tbps unit. bps means bytes per second.
                    type: string
                required:
                - buffer
                - limit
                - rate
                type: object
              corrupt:
                description: Corrupt represents the detail about corrupt action
                properties:
                  correlation:
                    type: string
                  corrupt:
                    type: string
                required:
                - corrupt
                type: object
              delay:
                description: Delay represents the detail about delay action
                properties:
                  correlation:
                    type: string
                  jitter:
                    type: string
                  latency:
                    type: string
                  reorder:
                    description: ReorderSpec defines details of packet reorder.
                    properties:
                      correlation:
                        type: string
                      gap:
                        type: integer
                      reorder:
                        type: string
                    required:
                    - gap
                    - reorder
                    type: object
                required:
                - latency
                type: object
              device:
                description: Device represents the network device to be affected.
                type: string
              direction:
                default: to
                description: Direction represents the direction, this applies on netem
                  and network partition action
                enum:
                - to
                - from
                - both
                type: string
              duplicate:
                description: DuplicateSpec represents the detail about loss action
                properties:
                  correlation:
                    type: string
                  duplicate:
                    type: string
                required:
                - duplicate
                type: object
              duration:
                description: Duration represents the duration of the chaos action
                type: string
              externalTargets:
                description: ExternalTargets represents network targets outside k8s
                items:
                  type: string
                type: array
              loss:
                description: Loss represents the detail about loss action
                properties:
                  correlation:
                    type: string
                  loss:
                    type: string
                required:
                - loss
                type: object
              mode:
                description: 'Mode defines the mode to run chaos action. Supported
                  mode: one / all / fixed / fixed-percent / random-max-percent'
                enum:
                - one
                - all
                - fixed
                - fixed-percent
                - random-max-percent
                type: string
              selector:
                description: Selector is used to select pods that are used to inject
                  chaos action.
                properties:
                  annotationSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on annotations.
                    type: object
                  expressionSelectors:
                    description: a slice of label selector expressions that can be
                      used to select objects. A list of selectors based on set-based
                      label expressions.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  fieldSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on fields.
                    type: object
                  labelSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on labels.
                    type: object
                  namespaces:
                    description: Namespaces is a set of namespace to which objects
                      belong.
                    items:
                      type: string
                    type: array
                  nodeSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select nodes. Selector which must match a node's labels, and
                      objects must belong to these selected nodes.
                    type: object
                  nodes:
                    description: Nodes is a set of node name and objects must belong
                      to these nodes.
                    items:
                      type: string
                    type: array
                  podPhaseSelectors:
                    description: 'PodPhaseSelectors is a set of condition of a pod
                      at the current time. supported value: Pending / Running / Succeeded
                      / Failed / Unknown'
                    items:
                      type: string
                    type: array
                  pods:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: Pods is a map of string keys and a set values that
                      used to select pods. The key defines the namespace which pods
                      belong, and the each values is a set of pod names.
                    type: object
                type: object
              target:
                description: Target represents network target, this applies on netem
                  and network partition action
                properties:
                  mode:
                    description: 'Mode defines the mode to run chaos action. Supported
                      mode: one / all / fixed / fixed-percent / random-max-percent'
                    enum:
                    - one
                    - all
                    - fixed
                    - fixed-percent
                    - random-max-percent
                    type: string
                  selector:
                    description: Selector is used to select pods that are used to
                      inject chaos action.
                    properties:
                      annotationSelectors:
                        additionalProperties:
                          type: string
                        description: Map of string keys and values that can be used
                          to select objects. A selector based on annotations.
                        type: object
                      expressionSelectors:
                        description: a slice of label selector expressions that can
                          be used to select objects. A list of selectors based on
                          set-based label expressions.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      fieldSelectors:
                        additionalProperties:
                          type: string
                        description: Map of string keys and values that can be used
                          to select objects. A selector based on fields.
                        type: object
                      labelSelectors:
                        additionalProperties:
                          type: string
                        description: Map of string keys and values that can be used
                          to select objects. A selector based on labels.
                        type: object
                      namespaces:
                        description: Namespaces is a set of namespace to which objects
                          belong.
                        items:
                          type: string
                        type: array
                      nodeSelectors:
                        additionalProperties:
                          type: string
                        description: Map of string keys and values that can be used
                          to select nodes. Selector which must match a node's labels,
                          and objects must belong to these selected nodes.
                        type: object
                      nodes:
                        description: Nodes is a set of node name and objects must
                          belong to these nodes.
                        items:
                          type: string
                        type: array
                      podPhaseSelectors:
                        description: 'PodPhaseSelectors is a set of condition of a
                          pod at the current time. supported value: Pending / Running
                          / Succeeded / Failed / Unknown'
                        items:
                          type: string
                        type: array
                      pods:
                        additionalProperties:
                          items:
                            type: string
                          type: array
                        description: Pods is a map of string keys and a set values
                          that used to select pods. The key defines the namespace
                          which pods belong, and the each values is a set of pod names.
                        type: object
                    type: object
                  value:
                    description: Value is required when the mode is set to `FixedMode`
                      / `FixedPercentMode` / `RandomMaxPercentMode`. If `FixedMode`,
                      provide an integer of pods to do chaos action. If `FixedPercentMode`,
                      provide a number from 0-100 to specify the percent of pods the
                      server can do chaos action. IF `RandomMaxPercentMode`,  provide
                      a number from 0-100 to specify the max percent of pods to do
                      chaos action
                    type: string
                required:
                - mode
                - selector
                type: object
              targetDevice:
                description: TargetDevice represents the network device to be affected
                  in target scope.
                type: string
              value:
                description: Value is required when the mode is set to `FixedMode`
                  / `FixedPercentMode` / `RandomMaxPercentMode`. If `FixedMode`, provide
                  an integer of pods to do chaos action. If `FixedPercentMode`, provide
                  a number from 0-100 to specify the percent of pods the server can
                  do chaos action. IF `RandomMaxPercentMode`,  provide a number from
                  0-100 to specify the max percent of pods to do chaos action
                type: string
            required:
            - action
            - mode
            - selector
            type: object
          status:
            description: Most recently observed status of the chaos experiment about
              pods
            properties:
              conditions:
                description: Conditions represents the current global condition of
                  the chaos
                items:
                  properties:
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              experiment:
                description: Experiment records the last experiment state.
                properties:
                  containerRecords:
                    description: Records are used to track the running status
                    items:
                      properties:
                        id:
                          type: string
                        phase:
                          type: string
                        selectorKey:
                          type: string
                      required:
                      - id
                      - phase
                      - selectorKey
                      type: object
                    type: array
                  desiredPhase:
                    enum:
                    - Run
                    - Stop
                    type: string
                type: object
              instances:
                additionalProperties:
                  format: int64
                  type: integer
                description: Instances always specifies podnetworkchaos generation
                  or empty
                type: object
            required:
            - experiment
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: physicalmachinechaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: PhysicalMachineChaos
    listKind: PhysicalMachineChaosList
    plural: physicalmachinechaos
    singular: physicalmachinechaos
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.action
      name: action
      type: string
    - jsonPath: .spec.duration
      name: duration
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PhysicalMachineChaos is the Schema for the physical machine chaos
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the behavior of a physical machine chaos experiment
            properties:
              action:
                description: the subAction, generate automatically
                enum:
                - stress-cpu
                - stress-mem
                - disk-read-payload
                - disk-write-payload
                - disk-fill
                - network-corrupt
                - network-duplicate
                - network-loss
                - network-delay
                - network-partition
                - network-dns
                - network-bandwidth
                - process
                - jvm-exception
                - jvm-gc
                - jvm-latency
                - jvm-return
                - jvm-stress
                - jvm-rule-data
                - clock
                type: string
              address:
                description: 'DEPRECATED: Use Selector instead. Only one of Address
                  and Selector could be specified.'
                items:
                  type: string
                type: array
              clock:
                properties:
                  clock-ids-slice:
                    description: the identifier of the particular clock on which to
                      act. More clock description in linux kernel can be found in
                      man page of clock_getres, clock_gettime, clock_settime. Muti
                      clock ids should be split with ","
                    type: string
                  pid:
                    description: the pid of target program.
                    type: integer
                  time-offset:
                    description: specifies the length of time offset.
                    type: string
                type: object
              disk-fill:
                properties:
                  fill-by-fallocate:
                    description: fill disk by fallocate
                    type: boolean
                  path:
                    description: specifies the location to fill data in. if path not
                      provided, payload will read/write from/into a temp file, temp
                      file will be deleted after writing
                    type: string
                  size:
                    description: 'specifies how many units of data will write into
                      the file path. support unit: c=1, w=2, b=512, kB=1000, K=1024,
                      MB=1000*1000, M=1024*1024, GB=1000*1000*1000, G=1024*1024*1024
                      BYTES. example : 1M | 512kB'
                    type: string
                type: object
              disk-read-payload:
                properties:
                  path:
                    description: specifies the location to fill data in. if path not
                      provided, payload will read/write from/into a temp file, temp
                      file will be deleted after writing
                    type: string
                  payload-process-num:
                    description: specifies the number of process work on writing,
                      default 1, only 1-255 is valid value
                    type: integer
                  size:
                    description: 'specifies how many units of data will write into
                      the file path. support unit: c=1, w=2, b=512, kB=1000, K=1024,
                      MB=1000*1000, M=1024*1024, GB=1000*1000*1000, G=1024*1024*1024
                      BYTES. example : 1M | 512kB'
                    type: string
                type: object
              disk-write-payload:
                properties:
                  path:
                    description: specifies the location to fill data in. if path not
                      provided, payload will read/write from/into a temp file, temp
                      file will be deleted after writing
                    type: string
                  payload-process-num:
                    description: specifies the number of process work on writing,
                      default 1, only 1-255 is valid value
                    type: integer
                  size:
                    description: 'specifies how many units of data will write into
                      the file path. support unit: c=1, w=2, b=512, kB=1000, K=1024,
                      MB=1000*1000, M=1024*1024, GB=1000*1000*1000, G=1024*1024*1024
                      BYTES. example : 1M | 512kB'
                    type: string
                type: object
              duration:
                description: Duration represents the duration of the chaos action
                type: string
              jvm-exception:
                properties:
                  class:
                    description: Java class
                    type: string
                  exception:
                    description: the exception which needs to throw for action `exception`
                    type: string
                  method:
                    description: the method in Java class
                    type: string
                  pid:
                    description: the pid of Java process which needs to attach
                    type: integer
                  port:
                    description: the port of agent server, default 9277
                    format: int32
                    type: integer
                type: object
              jvm-gc:
                properties:
                  pid:
                    description: the pid of Java process which needs to attach
                    type: integer
                  port:
                    description: the port of agent server, default 9277
                    format: int32
                    type: integer
                type: object
              jvm-latency:
                properties:
                  class:
                    description: Java class
                    type: string
                  latency:
                    description: the latency duration for action 'latency', unit ms
                    type: integer
                  method:
                    description: the method in Java class
                    type: string
                  pid:
                    description: the pid of Java process which needs to attach
                    type: integer
                  port:
                    description: the port of agent server, default 9277
                    format: int32
                    type: integer
                type: object
              jvm-return:
                properties:
                  class:
                    description: Java class
                    type: string
                  method:
                    description: the method in Java class
                    type: string
                  pid:
                    description: the pid of Java process which needs to attach
                    type: integer
                  port:
                    description: the port of agent server, default 9277
                    format: int32
                    type: integer
                  value:
                    description: the return value for action 'return'
                    type: string
                type: object
              jvm-rule-data:
                properties:
                  pid:
                    description: the pid of Java process which needs to attach
                    type: integer
                  port:
                    description: the port of agent server, default 9277
                    format: int32
                    type: integer
                  rule-data:
                    description: RuleData used to save the rule file's data, will
                      use it when recover
                    type: string
                type: object
              jvm-stress:
                properties:
                  cpu-count:
                    description: the CPU core number need to use, only set it when
                      action is stress
                    type: integer
                  mem-type:
                    description: the memory type need to locate, only set it when
                      action is stress, the value can be 'stack' or 'heap'
                    type: string
                  pid:
                    description: the pid of Java process which needs to attach
                    type: integer
                  port:
                    description: the port of agent server, default 9277
                    format: int32
                    type: integer
                type: object
              mode:
                description: 'Mode defines the mode to run chaos action. Supported
                  mode: one / all / fixed / fixed-percent / random-max-percent'
                enum:
                - one
                - all
                - fixed
                - fixed-percent
                - random-max-percent
                type: string
              network-bandwidth:
                properties:
                  buffer:
                    format: int32
                    minimum: 1
                    type: integer
                  device:
                    type: string
                  hostname:
                    type: string
                  ip-address:
                    type: string
                  limit:
                    format: int32
                    minimum: 1
                    type: integer
                  minburst:
                    format: int32
                    type: integer
                  peakrate:
                    format: int64
                    type: integer
                  rate:
                    type: string
                required:
                - buffer
                - limit
                - rate
                type: object
              network-corrupt:
                properties:
                  correlation:
                    description: correlation is percentage (10 is 10%)
                    type: string
                  device:
                    description: the network interface to impact
                    type: string
                  egress-port:
                    description: only impact egress traffic to these destination ports,
                      use a ',' to separate or to indicate the range, such as 80,
                      8001:8010. it can only be used in conjunction with -p tcp or
                      -p udp
                    type: string
                  hostname:
                    description: only impact traffic to these hostnames
                    type: string
                  ip-address:
                    description: only impact egress traffic to these IP addresses
                    type: string
                  ip-protocol:
                    description: 'only impact traffic using this IP protocol, supported:
                      tcp, udp, icmp, all'
                    type: string
                  percent:
                    description: percentage of packets to corrupt (10 is 10%)
                    type: string
                  source-port:
                    description: only impact egress traffic from these source ports,
                      use a ',' to separate or to indicate the range, such as 80,
                      8001:8010. it can only be used in conjunction with -p tcp or
                      -p udp
                    type: string
                type: object
              network-delay:
                properties:
                  correlation:
                    description: correlation is percentage (10 is 10%)
                    type: string
                  device:
                    description: the network interface to impact
                    type: string
                  egress-port:
                    description: only impact egress traffic to these destination ports,
                      use a ',' to separate or to indicate the range, such as 80,
                      8001:8010. it can only be used in conjunction with -p tcp or
                      -p udp
                    type: string
                  hostname:
                    description: only impact traffic to these hostnames
                    type: string
                  ip-address:
                    description: only impact egress traffic to these IP addresses
                    type: string
                  ip-protocol:
                    description: 'only impact traffic using this IP protocol, supported:
                      tcp, udp, icmp, all'
                    type: string
                  jitter:
                    description: 'jitter time, time units: ns, us (or µs), ms, s,
                      m, h.'
                    type: string
                  latency:
                    description: 'delay egress time, time units: ns, us (or µs), ms,
                      s, m, h.'
                    type: string
                  source-port:
                    description: only impact egress traffic from these source ports,
                      use a ',' to separate or to indicate the range, such as 80,
                      8001:8010. it can only be used in conjunction with -p tcp or
                      -p udp
                    type: string
                type: object
              network-dns:
                properties:
                  dns-domain-name:
                    description: map this host to specified IP
                    type: string
                  dns-ip:
                    description: map specified host to this IP address
                    type: string
                  dns-server:
                    description: update the DNS server in /etc/resolv.conf with this
                      value
                    type: string
                type: object
              network-duplicate:
                properties:
                  correlation:
                    description: correlation is percentage (10 is 10%)
                    type: string
                  device:
                    description: the network interface to impact
                    type: string
                  egress-port:
                    description: only impact egress traffic to these destination ports,
                      use a ',' to separate or to indicate the range, such as 80,
                      8001:8010. it can only be used in conjunction with -p tcp or
                      -p udp
                    type: string
                  hostname:
                    description: only impact traffic to these hostnames
                    type: string
                  ip-address:
                    description: only impact egress traffic to these IP addresses
                    type: string
                  ip-protocol:
                    description: 'only impact traffic using this IP protocol, supported:
                      tcp, udp, icmp, all'
                    type: string
                  percent:
                    description: percentage of packets to duplicate (10 is 10%)
                    type: string
                  source-port:
                    description: only impact egress traffic from these source ports,
                      use a ',' to separate or to indicate the range, such as 80,
                      8001:8010. it can only be used in conjunction with -p tcp or
                      -p udp
                    type: string
                type: object
              network-loss:
                properties:
                  correlation:
                    description: correlation is percentage (10 is 10%)
                    type: string
                  device:
                    description: the network interface to impact
                    type: string
                  egress-port:
                    description: only impact egress traffic to these destination ports,
                      use a ',' to separate or to indicate the range, such as 80,
                      8001:8010. it can only be used in conjunction with -p tcp or
                      -p udp
                    type: string
                  hostname:
                    description: only impact traffic to these hostnames
                    type: string
                  ip-address:
                    description: only impact egress traffic to these IP addresses
                    type: string
                  ip-protocol:
                    description: 'only impact traffic using this IP protocol, supported:
                      tcp, udp, icmp, all'
                    type: string
                  percent:
                    description: percentage of packets to loss (10 is 10%)
                    type: string
                  source-port:
                    description: only impact egress traffic from these source ports,
                      use a ',' to separate or to indicate the range, such as 80,
                      8001:8010. it can only be used in conjunction with -p tcp or
                      -p udp
                    type: string
                type: object
              network-partition:
                properties:
                  accept-tcp-flags:
                    description: only the packet which match the tcp flag can be accepted,
                      others will be dropped. only set when the IPProtocol is tcp,
                      used for partition.
                    type: string
                  device:
                    description: the network interface to impact
                    type: string
                  direction:
                    description: specifies the partition direction, values can be
                      'from', 'to'. 'from' means packets coming from the 'IPAddress'
                      or 'Hostname' and going to your server, 'to' means packets originating
                      from your server and going to the 'IPAddress' or 'Hostname'.
                    type: string
                  hostname:
                    description: only impact traffic to these hostnames
                    type: string
                  ip-address:
                    description: only impact egress traffic to these IP addresses
                    type: string
                  ip-protocol:
                    description: only impact egress traffic to these IP addresses
                    type: string
                type: object
              process:
                properties:
                  process:
                    description: the process name or the process ID
                    type: string
                  recoverCmd:
                    description: the command to be run when recovering experiment
                    type: string
                  signal:
                    description: the signal number to send
                    type: integer
                type: object
              selector:
                description: Selector is used to select physical machines that are
                  used to inject chaos action.
                properties:
                  annotationSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on annotations.
                    type: object
                  expressionSelectors:
                    description: a slice of label selector expressions that can be
                      used to select objects. A list of selectors based on set-based
                      label expressions.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  fieldSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on fields.
                    type: object
                  labelSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on labels.
                    type: object
                  namespaces:
                    description: Namespaces is a set of namespace to which objects
                      belong.
                    items:
                      type: string
                    type: array
                  physicalMachines:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: PhysicalMachines is a map of string keys and a set
                      values that used to select physical machines. The key defines
                      the namespace which physical machine belong, and each value
                      is a set of physical machine names.
                    type: object
                type: object
              stress-cpu:
                properties:
                  load:
                    description: specifies P percent loading per CPU worker. 0 is
                      effectively a sleep (no load) and 100 is full loading.
                    type: integer
                  options:
                    description: extend stress-ng options
                    type: string
                  workers:
                    description: specifies N workers to apply the stressor.
                    type: integer
                type: object
              stress-mem:
                properties:
                  options:
                    description: extend stress-ng options
                    type: string
                  size:
                    description: specifies N bytes consumed per vm worker, default
                      is the total available memory. One can specify the size as %
                      of total available memory or in units of B, KB/KiB, MB/MiB,
                      GB/GiB, TB/TiB..
                    type: string
                type: object
              uid:
                description: the experiment ID
                type: string
              value:
                description: Value is required when the mode is set to `FixedMode`
                  / `FixedPercentMode` / `RandomMaxPercentMode`. If `FixedMode`, provide
                  an integer of physical machines to do chaos action. If `FixedPercentMode`,
                  provide a number from 0-100 to specify the percent of physical machines
                  the server can do chaos action. IF `RandomMaxPercentMode`,  provide
                  a number from 0-100 to specify the max percent of pods to do chaos
                  action
                type: string
            required:
            - action
            - mode
            type: object
          status:
            description: Most recently observed status of the chaos experiment
            properties:
              conditions:
                description: Conditions represents the current global condition of
                  the chaos
                items:
                  properties:
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              experiment:
                description: Experiment records the last experiment state.
                properties:
                  containerRecords:
                    description: Records are used to track the running status
                    items:
                      properties:
                        id:
                          type: string
                        phase:
                          type: string
                        selectorKey:
                          type: string
                      required:
                      - id
                      - phase
                      - selectorKey
                      type: object
                    type: array
                  desiredPhase:
                    enum:
                    - Run
                    - Stop
                    type: string
                type: object
            required:
            - experiment
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: physicalmachines.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: PhysicalMachine
    listKind: PhysicalMachineList
    plural: physicalmachines
    singular: physicalmachine
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PhysicalMachine is the Schema for the physical machine API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the behavior of a physical machine
            properties:
              address:
                description: Address represents the address of the physical machine
                type: string
            required:
            - address
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: podchaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: PodChaos
    listKind: PodChaosList
    plural: podchaos
    singular: podchaos
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PodChaos is the control script`s spec.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the behavior of a pod chaos experiment
            properties:
              action:
                description: 'Action defines the specific pod chaos action. Supported
                  action: pod-kill / pod-failure / container-kill Default action:
                  pod-kill'
                enum:
                - pod-kill
                - pod-failure
                - container-kill
                type: string
              containerNames:
                description: ContainerNames indicates list of the name of affected
                  container. If not set, the first container will be injected
                items:
                  type: string
                type: array
              duration:
                description: Duration represents the duration of the chaos action.
                  It is required when the action is `PodFailureAction`. A duration
                  string is a possibly signed sequence of decimal numbers, each with
                  optional fraction and a unit suffix, such as "300ms", "-1.5h" or
                  "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s", "m",
                  "h".
                type: string
              gracePeriod:
                description: GracePeriod is used in pod-kill action. It represents
                  the duration in seconds before the pod should be deleted. Value
                  must be non-negative integer. The default value is zero that indicates
                  delete immediately.
                format: int64
                minimum: 0
                type: integer
              mode:
                description: 'Mode defines the mode to run chaos action. Supported
                  mode: one / all / fixed / fixed-percent / random-max-percent'
                enum:
                - one
                - all
                - fixed
                - fixed-percent
                - random-max-percent
                type: string
              selector:
                description: Selector is used to select pods that are used to inject
                  chaos action.
                properties:
                  annotationSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on annotations.
                    type: object
                  expressionSelectors:
                    description: a slice of label selector expressions that can be
                      used to select objects. A list of selectors based on set-based
                      label expressions.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  fieldSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on fields.
                    type: object
                  labelSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select objects. A selector based on labels.
                    type: object
                  namespaces:
                    description: Namespaces is a set of namespace to which objects
                      belong.
                    items:
                      type: string
                    type: array
                  nodeSelectors:
                    additionalProperties:
                      type: string
                    description: Map of string keys and values that can be used to
                      select nodes. Selector which must match a node's labels, and
                      objects must belong to these selected nodes.
                    type: object
                  nodes:
                    description: Nodes is a set of node name and objects must belong
                      to these nodes.
                    items:
                      type: string
                    type: array
                  podPhaseSelectors:
                    description: 'PodPhaseSelectors is a set of condition of a pod
                      at the current time. supported value: Pending / Running / Succeeded
                      / Failed / Unknown'
                    items:
                      type: string
                    type: array
                  pods:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: Pods is a map of string keys and a set values that
                      used to select pods. The key defines the namespace which pods
                      belong, and the each values is a set of pod names.
                    type: object
                type: object
              value:
                description: Value is required when the mode is set to `FixedMode`
                  / `FixedPercentMode` / `RandomMaxPercentMode`. If `FixedMode`, provide
                  an integer of pods to do chaos action. If `FixedPercentMode`, provide
                  a number from 0-100 to specify the percent of pods the server can
                  do chaos action. IF `RandomMaxPercentMode`,  provide a number from
                  0-100 to specify the max percent of pods to do chaos action
                type: string
            required:
            - action
            - mode
            - selector
            type: object
          status:
            description: Most recently observed status of the chaos experiment about
              pods
            properties:
              conditions:
                description: Conditions represents the current global condition of
                  the chaos
                items:
                  properties:
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              experiment:
                description: Experiment records the last experiment state.
                properties:
                  containerRecords:
                    description: Records are used to track the running status
                    items:
                      properties:
                        id:
                          type: string
                        phase:
                          type: string
                        selectorKey:
                          type: string
                      required:
                      - id
                      - phase
                      - selectorKey
                      type: object
                    type: array
                  desiredPhase:
                    enum:
                    - Run
                    - Stop
                    type: string
                type: object
            required:
            - experiment
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: podhttpchaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: PodHttpChaos
    listKind: PodHttpChaosList
    plural: podhttpchaos
    singular: podhttpchaos
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PodHttpChaos is the Schema for the podhttpchaos API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PodHttpChaosSpec defines the desired state of PodHttpChaos.
            properties:
              rules:
                description: Rules are a list of injection rule for http request.
                items:
                  description: PodHttpChaosRule defines the injection rule for http.
                  properties:
                    actions:
                      description: Actions contains rules to inject target.
                      properties:
                        abort:
                          description: Abort is a rule to abort a http session.
                          type: boolean
                        delay:
                          description: Delay represents the delay of the target request/response.
                            A duration string is a possibly unsigned sequence of decimal
                            numbers, each with optional fraction and a unit suffix,
                            such as "300ms", "2h45m". Valid time units are "ns", "us"
                            (or "µs"), "ms", "s", "m", "h".
                          type: string
                        patch:
                          description: Patch is a rule to patch some contents in target.
                          properties:
                            body:
                              description: Body is a rule to patch message body of
                                target.
                              properties:
                                type:
                                  description: Type represents the patch type, only
                                    support `JSON` as [merge patch json](https://tools.ietf.org/html/rfc7396)
                                    currently.
                                  type: string
                                value:
                                  description: Value is the patch contents.
                                  type: string
                              required:
                              - type
                              - value
                              type: object
                            headers:
                              description: 'Headers is a rule to append http headers
                                of target. For example: `[["Set-Cookie", "<one cookie>"],
                                ["Set-Cookie", "<another cookie>"]]`.'
                              items:
                                items:
                                  type: string
                                type: array
                              type: array
                            queries:
                              description: 'Queries is a rule to append uri queries
                                of target(Request only). For example: `[["foo", "bar"],
                                ["foo", "unknown"]]`.'
                              items:
                                items:
                                  type: string
                                type: array
                              type: array
                          type: object
                        replace:
                          description: Replace is a rule to replace some contents
                            in target.
                          properties:
                            body:
                              description: Body is a rule to replace http message
                                body in target.
                              format: byte
                              type: string
                            code:
                              description: Code is a rule to replace http status code
                                in response.
                              format: int32
                              type: integer
                            headers:
                              additionalProperties:
                                type: string
                              description: Headers is a rule to replace http headers
                                of target. The key-value pairs represent header name
                                and header value pairs.
                              type: object
                            method:
                              description: Method is a rule to replace http method
                                in request.
                              type: string
                            path:
                              description: Path is rule to to replace uri path in
                                http request.
                              type: string
                            queries:
                              additionalProperties:
                                type: string
                              description: 'Queries is a rule to replace uri queries
                                in http request. For example, with value `{ "foo":
                                "unknown" }`, the `/?foo=bar` will be altered to `/?foo=unknown`,'
                              type: object
                          type: object
                      type: object
                    port:
                      description: Port represents the target port to be proxy of.
                      format: int32
                      type: integer
                    selector:
                      description: Selector contains the rules to select target.
                      properties:
                        code:
                          description: Code is a rule to select target by http status
                            code in response.
                          format: int32
                          type: integer
                        method:
                          description: Method is a rule to select target by http method
                            in request.
                          type: string
                        path:
                          description: Path is a rule to select target by uri path
                            in http request.
                          type: string
                        port:
                          description: Port is a rule to select server listening on
                            specific port.
                          format: int32
                          type: integer
                        request_headers:
                          additionalProperties:
                            type: string
                          description: RequestHeaders is a rule to select target by
                            http headers in request. The key-value pairs represent
                            header name and header value pairs.
                          type: object
                        response_headers:
                          additionalProperties:
                            type: string
                          description: ResponseHeaders is a rule to select target
                            by http headers in response. The key-value pairs represent
                            header name and header value pairs.
                          type: object
                      type: object
                    source:
                      description: Source represents the source of current rules
                      type: string
                    target:
                      description: Target is the object to be selected and injected,
                        <Request|Response>.
                      type: string
                  required:
                  - actions
                  - port
                  - selector
                  - target
                  type: object
                type: array
            type: object
          status:
            description: PodHttpChaosStatus defines the actual state of PodHttpChaos.
            properties:
              failedMessage:
                type: string
              observedGeneration:
                format: int64
                type: integer
              pid:
                description: Pid represents a running tproxy process id.
                format: int64
                type: integer
              startTime:
                description: StartTime represents the start time of a tproxy process.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: podiochaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: PodIOChaos
    listKind: PodIOChaosList
    plural: podiochaos
    singular: podiochaos
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PodIOChaos is the Schema for the podiochaos API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PodIOChaosSpec defines the desired state of IOChaos
            properties:
              actions:
                description: Actions are a list of IOChaos actions
                items:
                  description: IOChaosAction defines a possible action of IOChaos
                  properties:
                    atime:
                      description: Timespec represents a time
                      properties:
                        nsec:
                          format: int64
                          type: integer
                        sec:
                          format: int64
                          type: integer
                      required:
                      - nsec
                      - sec
                      type: object
                    blocks:
                      format: int64
                      type: integer
                    ctime:
                      description: Timespec represents a time
                      properties:
                        nsec:
                          format: int64
                          type: integer
                        sec:
                          format: int64
                          type: integer
                      required:
                      - nsec
                      - sec
                      type: object
                    faults:
                      description: Faults represents the fault to inject
                      items:
                        description: IoFault represents the fault to inject and their
                          weight
                        properties:
                          errno:
                            format: int32
                            type: integer
                          weight:
                            format: int32
                            type: integer
                        required:
                        - errno
                        - weight
                        type: object
                      type: array
                    gid:
                      format: int32
                      type: integer
                    ino:
                      format: int64
                      type: integer
                    kind:
                      description: FileType represents type of file
                      type: string
                    latency:
                      description: Latency represents the latency to inject
                      type: string
                    methods:
                      description: Methods represents the method that the action will
                        inject in
                      items:
                        type: string
                      type: array
                    mistake:
                      description: MistakeSpec represents the mistake to inject
                      properties:
                        filling:
                          description: Filling determines what is filled in the mistake
                            data.
                          enum:
                          - zero
                          - random
                          type: string
                        maxLength:
                          description: Max length of each wrong data segment in bytes
                          format: int64
                          minimum: 1
                          type: integer
                        maxOccurrences:
                          description: There will be [1, MaxOccurrences] segments
                            of wrong data.
                          format: int64
                          minimum: 1
                          type: integer
                      type: object
                    mtime:
                      description: Timespec represents a time
                      properties:
                        nsec:
                          format: int64
                          type: integer
                        sec:
                          format: int64
                          type: integer
                      required:
                      - nsec
                      - sec
                      type: object
                    nlink:
                      format: int32
                      type: integer
                    path:
                      description: Path represents a glob of injecting path
                      type: string
                    percent:
                      description: Percent represents the percent probability of injecting
                        this action
                      type: integer
                    perm:
                      type: integer
                    rdev:
                      format: int32
                      type: integer
                    size:
                      format: int64
                      type: integer
                    source:
                      description: Source represents the source of current rules
                      type: string
                    type:
                      description: IOChaosType represents the type of IOChaos Action
                      type: string
                    uid:
                      format: int32
                      type: integer
                  required:
                  - path
                  - percent
                  - type
                  type: object
                type: array
              container:
                description: 'TODO: support multiple different container to inject
                  in one pod'
                type: string
              volumeMountPath:
                description: 'VolumeMountPath represents the target mount path It
                  must be a root of mount path now. TODO: search the mount parent
                  of any path automatically. TODO: support multiple different volume
                  mount path in one pod'
                type: string
            required:
            - volumeMountPath
            type: object
          status:
            properties:
              failedMessage:
                type: string
              observedGeneration:
                format: int64
                type: integer
              pid:
                description: Pid represents a running toda process id
                format: int64
                type: integer
              startTime:
                description: StartTime represents the start time of a toda process
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: podnetworkchaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: PodNetworkChaos
    listKind: PodNetworkChaosList
    plural: podnetworkchaos
    singular: podnetworkchaos
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PodNetworkChaos is the Schema for the PodNetworkChaos API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the behavior of a pod chaos experiment
            properties:
              ipsets:
                description: The ipset on the pod
                items:
                  description: RawIPSet represents an ipset on specific pod
                  properties:
                    cidrAndPorts:
                      description: The contents of ipset. Only available when IPSetType
                        is NetPortIPSet.
                      items:
                        description: CidrAndPort represents CIDR and port pair
                        properties:
                          cidr:
                            type: string
                          port:
                            maximum: 65535
                            minimum: 1
                            type: integer
                        required:
                        - cidr
                        - port
                        type: object
                      type: array
                    cidrs:
                      description: The contents of ipset. Only available when IPSetType
                        is NetIPSet.
                      items:
                        type: string
                      type: array
                    ipsetType:
                      description: IPSetType represents the type of IP set
                      type: string
                    name:
                      description: The name of ipset
                      type: string
                    setNames:
                      description: The contents of ipset. Only available when IPSetType
                        is SetIPSet.
                      items:
                        type: string
                      type: array
                    source:
                      type: string
                  required:
                  - ipsetType
                  - name
                  - source
                  type: object
                type: array
              iptables:
                description: The iptables rules on the pod
                items:
                  description: RawIptables represents the iptables rules on specific
                    pod
                  properties:
                    device:
                      description: Device represents the network device to be affected.
                      type: string
                    direction:
                      description: The block direction of this iptables rule
                      type: string
                    ipsets:
                      description: The name of related ipset
                      items:
                        type: string
                      nullable: true
                      type: array
                    name:
                      description: The name of iptables chain
                      type: string
                    source:
                      type: string
                  required:
                  - direction
                  - name
                  - source
                  type: object
                type: array
              tcs:
                description: The tc rules on the pod
                items:
                  description: RawTrafficControl represents the traffic control chaos
                    on specific pod
                  properties:
                    bandwidth:
                      description: Bandwidth represents the detail about bandwidth
                        control action
                      properties:
                        buffer:
                          description: Buffer is the maximum amount of bytes that
                            tokens can be available for instantaneously.
                          format: int32
                          minimum: 1
                          type: integer
                        limit:
                          description: Limit is the number of bytes that can be queued
                            waiting for tokens to become available.
                          format: int32
                          minimum: 1
                          type: integer
                        minburst:
                          description: Minburst specifies the size of the peakrate
                            bucket. For perfect accuracy, should be set to the MTU
                            of the interface.  If a peakrate is needed, but some burstiness
                            is acceptable, this size can be raised. A 3000 byte minburst
                            allows around 3mbit/s of peakrate, given 1000 byte packets.
                          format: int32
                          minimum: 0
                          type: integer
                        peakrate:
                          description: Peakrate is the maximum depletion rate of the
                            bucket. The peakrate does not need to be set, it is only
                            necessary if perfect millisecond timescale shaping is
                            required.
                          format: int64
                          minimum: 0
                          type: integer
                        rate:
                          description: Rate is the speed knob. Allows bps, kbps, mbps,
                            gbps, tbps unit. bps means bytes per second.
                          type: string
                      required:
                      - buffer
                      - limit
                      - rate
                      type: object
                    corrupt:
                      description: Corrupt represents the detail about corrupt action
                      properties:
                        correlation:
                          type: string
                        corrupt:
                          type: string
                      required:
                      - corrupt
                      type: object
                    delay:
                      description: Delay represents the detail about delay action
                      properties:
                        correlation:
                          type: string
                        jitter:
                          type: string
                        latency:
                          type: string
                        reorder:
                          description: ReorderSpec defines details of packet reorder.
                          properties:
                            correlation:
                              type: string
                            gap:
                              type: integer
                            reorder:
                              type: string
                          required:
                          - gap
                          - reorder
                          type: object
                      required:
                      - latency
                      type: object
                    device:
                      description: Device represents the network device to be affected.
                      type: string
                    duplicate:
                      description: DuplicateSpec represents the detail about loss
                        action
                      properties:
                        correlation:
                          type: string
                        duplicate:
                          type: string
                      required:
                      - duplicate
                      type: object
                    ipset:
                      description: The name of target ipset
                      type: string
                    loss:
                      description: Loss represents the detail about loss action
                      properties:
                        correlation:
                          type: string
                        loss:
                          type: string
                      required:
                      - loss
                      type: object
                    source:
                      description: The name and namespace of the source network chaos
                      type: string
                    type:
                      description: The type of traffic control
                      type: string
                  required:
                  - source
                  - type
                  type: object
                type: array
            type: object
          status:
            description: Most recently observed status of the chaos experiment about
              pods
            properties:
              failedMessage:
                type: string
              observedGeneration:
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []